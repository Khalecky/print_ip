\hypertarget{main_8cpp}{}\section{main.\+cpp File Reference}
\label{main_8cpp}\index{main.\+cpp@{main.\+cpp}}
{\ttfamily \#include $<$iostream$>$}\\*
{\ttfamily \#include $<$type\+\_\+traits$>$}\\*
{\ttfamily \#include $<$list$>$}\\*
{\ttfamily \#include $<$vector$>$}\\*
{\ttfamily \#include $<$tuple$>$}\\*
Include dependency graph for main.\+cpp\+:
% FIG 0
\subsection*{Classes}
\begin{DoxyCompactItemize}
\item 
struct \hyperlink{structis__one__of}{is\+\_\+one\+\_\+of$<$ T, Args $>$}
\item 
struct \hyperlink{structis__one__of_3_01T_01_4}{is\+\_\+one\+\_\+of$<$ T $>$}
\item 
struct \hyperlink{structis__one__of_3_01T_00_01T_00_01Args_8_8_8_01_4}{is\+\_\+one\+\_\+of$<$ T, T, Args... $>$}
\item 
struct \hyperlink{structis__one__of_3_01T_00_01U_00_01Args_8_8_8_01_4}{is\+\_\+one\+\_\+of$<$ T, U, Args... $>$}
\item 
struct \hyperlink{structTupleIter}{Tuple\+Iter$<$ Index, Types $>$}
\item 
struct \hyperlink{structTupleIter_3_010_00_01Types_8_8_8_01_4}{Tuple\+Iter$<$ 0, Types... $>$}
\end{DoxyCompactItemize}
\subsection*{Typedefs}
\begin{DoxyCompactItemize}
\item 
{\footnotesize template$<$class T $>$ }\\using \hyperlink{main_8cpp_a42c7755f8bcf3e029d0f13ecdfa3af2b}{Print\+Integral\+Type} = \hyperlink{main_8cpp_ad67365b697d4f9b441db419f4c20fab8}{enable\+\_\+if\+\_\+t}$<$ \hyperlink{main_8cpp_a396e4b8c756441b942c1619de108e56a}{is\+\_\+integral\+\_\+v}$<$ T $>$$>$
\item 
{\footnotesize template$<$class T $>$ }\\using \hyperlink{main_8cpp_a48a086d2a937538a88bdc0b9d4068fea}{Print\+Container\+Type} = \hyperlink{main_8cpp_ad67365b697d4f9b441db419f4c20fab8}{enable\+\_\+if\+\_\+t}$<$ \hyperlink{structis__one__of}{is\+\_\+one\+\_\+of}$<$ T, list$<$ typename T\+::value\+\_\+type $>$, vector$<$ typename T\+::value\+\_\+type $>$ $>$\+::value $>$
\item 
{\footnotesize template$<$typename... Args$>$ }\\using \hyperlink{main_8cpp_ad9102a4f38ee97366eb833ac8037b92b}{Print\+Tuple\+Type} = \hyperlink{main_8cpp_ad67365b697d4f9b441db419f4c20fab8}{enable\+\_\+if\+\_\+t}$<$ \hyperlink{structis__one__of}{is\+\_\+one\+\_\+of}$<$ Args... $>$\+::value $>$
\item 
{\footnotesize template$<$bool P, class T  = void$>$ }\\using \hyperlink{main_8cpp_ad67365b697d4f9b441db419f4c20fab8}{enable\+\_\+if\+\_\+t} = typename enable\+\_\+if$<$ P, T $>$\+::type
\end{DoxyCompactItemize}
\subsection*{Functions}
\begin{DoxyCompactItemize}
\item 
void \hyperlink{main_8cpp_aa92a6f6b86a7edebccc96f13b9ce0bd2}{print\+\_\+ip} (const string \&s)
\item 
{\footnotesize template$<$typename T , typename Is\+Valid  = Print\+Integral\+Type$<$\+T$>$$>$ }\\void \hyperlink{main_8cpp_a14ecaeb827c76500416f99a606e63502}{print\+\_\+ip} (T ip)
\item 
{\footnotesize template$<$class T , class Is\+Valid  = Print\+Container\+Type$<$\+T$>$$>$ }\\void \hyperlink{main_8cpp_acf3cde7ad5ba8ecf9346fe7810081d32}{print\+\_\+ip} (const T \&v)
\item 
{\footnotesize template$<$typename... Types, class Is\+Valid  = Print\+Tuple\+Type$<$\+Types...$>$$>$ }\\void \hyperlink{main_8cpp_a4cf867f6c28bb7ed261cd61a916f029a}{print\+\_\+ip} (const tuple$<$ Types... $>$ \&t)
\item 
int \hyperlink{main_8cpp_ae66f6b31b5ad750f1fe042a706a4e3d4}{main} ()
\end{DoxyCompactItemize}
\subsection*{Variables}
\begin{DoxyCompactItemize}
\item 
{\footnotesize template$<$class T $>$ }\\constexpr bool \hyperlink{main_8cpp_a396e4b8c756441b942c1619de108e56a}{is\+\_\+integral\+\_\+v} = is\+\_\+integral$<$T$>$\+::value
\end{DoxyCompactItemize}


\subsection{Typedef Documentation}
\index{main.\+cpp@{main.\+cpp}!enable\+\_\+if\+\_\+t@{enable\+\_\+if\+\_\+t}}
\index{enable\+\_\+if\+\_\+t@{enable\+\_\+if\+\_\+t}!main.\+cpp@{main.\+cpp}}
\subsubsection[{\texorpdfstring{enable\+\_\+if\+\_\+t}{enable_if_t}}]{\setlength{\rightskip}{0pt plus 5cm}template$<$bool P, class T  = void$>$ using {\bf enable\+\_\+if\+\_\+t} =  typename enable\+\_\+if$<$P, T$>$\+::type}\hypertarget{main_8cpp_ad67365b697d4f9b441db419f4c20fab8}{}\label{main_8cpp_ad67365b697d4f9b441db419f4c20fab8}
\index{main.\+cpp@{main.\+cpp}!Print\+Container\+Type@{Print\+Container\+Type}}
\index{Print\+Container\+Type@{Print\+Container\+Type}!main.\+cpp@{main.\+cpp}}
\subsubsection[{\texorpdfstring{Print\+Container\+Type}{PrintContainerType}}]{\setlength{\rightskip}{0pt plus 5cm}template$<$class T $>$ using {\bf Print\+Container\+Type} =  {\bf enable\+\_\+if\+\_\+t}$<${\bf is\+\_\+one\+\_\+of}$<$T, list$<$typename T\+::value\+\_\+type$>$, vector$<$typename T\+::value\+\_\+type$>$ $>$\+::value$>$}\hypertarget{main_8cpp_a48a086d2a937538a88bdc0b9d4068fea}{}\label{main_8cpp_a48a086d2a937538a88bdc0b9d4068fea}
\index{main.\+cpp@{main.\+cpp}!Print\+Integral\+Type@{Print\+Integral\+Type}}
\index{Print\+Integral\+Type@{Print\+Integral\+Type}!main.\+cpp@{main.\+cpp}}
\subsubsection[{\texorpdfstring{Print\+Integral\+Type}{PrintIntegralType}}]{\setlength{\rightskip}{0pt plus 5cm}template$<$class T $>$ using {\bf Print\+Integral\+Type} =  {\bf enable\+\_\+if\+\_\+t}$<${\bf is\+\_\+integral\+\_\+v}$<$T$>$$>$}\hypertarget{main_8cpp_a42c7755f8bcf3e029d0f13ecdfa3af2b}{}\label{main_8cpp_a42c7755f8bcf3e029d0f13ecdfa3af2b}
\index{main.\+cpp@{main.\+cpp}!Print\+Tuple\+Type@{Print\+Tuple\+Type}}
\index{Print\+Tuple\+Type@{Print\+Tuple\+Type}!main.\+cpp@{main.\+cpp}}
\subsubsection[{\texorpdfstring{Print\+Tuple\+Type}{PrintTupleType}}]{\setlength{\rightskip}{0pt plus 5cm}template$<$typename... Args$>$ using {\bf Print\+Tuple\+Type} =  {\bf enable\+\_\+if\+\_\+t}$<$ {\bf is\+\_\+one\+\_\+of}$<$Args...$>$\+::value $>$}\hypertarget{main_8cpp_ad9102a4f38ee97366eb833ac8037b92b}{}\label{main_8cpp_ad9102a4f38ee97366eb833ac8037b92b}


\subsection{Function Documentation}
\index{main.\+cpp@{main.\+cpp}!main@{main}}
\index{main@{main}!main.\+cpp@{main.\+cpp}}
\subsubsection[{\texorpdfstring{main()}{main()}}]{\setlength{\rightskip}{0pt plus 5cm}int main (
\begin{DoxyParamCaption}
{}
\end{DoxyParamCaption}
)}\hypertarget{main_8cpp_ae66f6b31b5ad750f1fe042a706a4e3d4}{}\label{main_8cpp_ae66f6b31b5ad750f1fe042a706a4e3d4}
\index{main.\+cpp@{main.\+cpp}!print\+\_\+ip@{print\+\_\+ip}}
\index{print\+\_\+ip@{print\+\_\+ip}!main.\+cpp@{main.\+cpp}}
\subsubsection[{\texorpdfstring{print\+\_\+ip(const string \&s)}{print_ip(const string &s)}}]{\setlength{\rightskip}{0pt plus 5cm}void print\+\_\+ip (
\begin{DoxyParamCaption}
\item[{const string \&}]{s}
\end{DoxyParamCaption}
)}\hypertarget{main_8cpp_aa92a6f6b86a7edebccc96f13b9ce0bd2}{}\label{main_8cpp_aa92a6f6b86a7edebccc96f13b9ce0bd2}
\index{main.\+cpp@{main.\+cpp}!print\+\_\+ip@{print\+\_\+ip}}
\index{print\+\_\+ip@{print\+\_\+ip}!main.\+cpp@{main.\+cpp}}
\subsubsection[{\texorpdfstring{print\+\_\+ip(\+T ip)}{print_ip(T ip)}}]{\setlength{\rightskip}{0pt plus 5cm}template$<$typename T , typename Is\+Valid  = Print\+Integral\+Type$<$\+T$>$$>$ void print\+\_\+ip (
\begin{DoxyParamCaption}
\item[{T}]{ip}
\end{DoxyParamCaption}
)}\hypertarget{main_8cpp_a14ecaeb827c76500416f99a606e63502}{}\label{main_8cpp_a14ecaeb827c76500416f99a606e63502}
\index{main.\+cpp@{main.\+cpp}!print\+\_\+ip@{print\+\_\+ip}}
\index{print\+\_\+ip@{print\+\_\+ip}!main.\+cpp@{main.\+cpp}}
\subsubsection[{\texorpdfstring{print\+\_\+ip(const T \&v)}{print_ip(const T &v)}}]{\setlength{\rightskip}{0pt plus 5cm}template$<$class T , class Is\+Valid  = Print\+Container\+Type$<$\+T$>$$>$ void print\+\_\+ip (
\begin{DoxyParamCaption}
\item[{const T \&}]{v}
\end{DoxyParamCaption}
)}\hypertarget{main_8cpp_acf3cde7ad5ba8ecf9346fe7810081d32}{}\label{main_8cpp_acf3cde7ad5ba8ecf9346fe7810081d32}
\index{main.\+cpp@{main.\+cpp}!print\+\_\+ip@{print\+\_\+ip}}
\index{print\+\_\+ip@{print\+\_\+ip}!main.\+cpp@{main.\+cpp}}
\subsubsection[{\texorpdfstring{print\+\_\+ip(const tuple$<$ Types... $>$ \&t)}{print_ip(const tuple< Types... > &t)}}]{\setlength{\rightskip}{0pt plus 5cm}template$<$typename... Types, class Is\+Valid  = Print\+Tuple\+Type$<$\+Types...$>$$>$ void print\+\_\+ip (
\begin{DoxyParamCaption}
\item[{const tuple$<$ Types... $>$ \&}]{t}
\end{DoxyParamCaption}
)}\hypertarget{main_8cpp_a4cf867f6c28bb7ed261cd61a916f029a}{}\label{main_8cpp_a4cf867f6c28bb7ed261cd61a916f029a}


\subsection{Variable Documentation}
\index{main.\+cpp@{main.\+cpp}!is\+\_\+integral\+\_\+v@{is\+\_\+integral\+\_\+v}}
\index{is\+\_\+integral\+\_\+v@{is\+\_\+integral\+\_\+v}!main.\+cpp@{main.\+cpp}}
\subsubsection[{\texorpdfstring{is\+\_\+integral\+\_\+v}{is_integral_v}}]{\setlength{\rightskip}{0pt plus 5cm}template$<$class T $>$ constexpr bool is\+\_\+integral\+\_\+v = is\+\_\+integral$<$T$>$\+::value}\hypertarget{main_8cpp_a396e4b8c756441b942c1619de108e56a}{}\label{main_8cpp_a396e4b8c756441b942c1619de108e56a}
